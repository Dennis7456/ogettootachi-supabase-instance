name: üóÑÔ∏è Supabase Backup

on:
  # daily at 00:00 UTC
  schedule:
    - cron: '0 0 * * *'
  # manual trigger
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout your repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Install PostgreSQL 17 client to match your server version
      - name: Install PostgreSQL 17 client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client-17

      # 3. Ensure your backup script is executable
      - name: Make backup script executable
        run: chmod +x ./backup_supabase.sh

      # 4. Install the Supabase CLI (optional if you need it for other tasks)
      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      # 5. Run your backup script, passing all required env vars
      - name: Run backup_supabase.sh
        env:
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
          SUPABASE_POOLER_HOST: ${{ secrets.SUPABASE_POOLER_HOST }}
          SUPABASE_POOLER_PORT: ${{ secrets.SUPABASE_POOLER_PORT }}
          SUPABASE_DB_USER: ${{ secrets.SUPABASE_DB_USER }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
          # (Optional) override the target database name if needed
          # SUPABASE_DB_NAME: postgres
        run: ./backup_supabase.sh

      # 6. Upload the dumps as artifacts (keep them for 90 days)
      - name: Upload backups
        uses: actions/upload-artifact@v4
        with:
          name: supabase-backups-${{ github.run_id }}
          path: backups/**/*.dump
          retention-days: 90
