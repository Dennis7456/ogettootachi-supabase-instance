name: 🗄️ Supabase Backup

on:
  # daily at midnight UTC
  schedule:
    - cron: '0 0 * * *'
  # manual trigger
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out the repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Add the PostgreSQL Apt repository so we can get client version 17
      - name: Add PostgreSQL Apt repo
        run: |
          sudo sh -c "echo 'deb http://apt.postgresql.org/pub/repos/apt \
            $(lsb_release -cs)-pgdg main' \
            > /etc/apt/sources.list.d/pgdg.list"
          curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc \
            | sudo apt-key add -

      # 3. Update and install the PostgreSQL 17 client
      - name: Install PostgreSQL client 17
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client-17

      # 4. Make the backup script executable
      - name: Make backup script executable
        run: chmod +x ./backup_supabase.sh

      # 5. (Optional) Install Supabase CLI if you need it elsewhere
      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      # 6. Run the backup script with all required env vars
      - name: Run backup_supabase.sh
        env:
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
          SUPABASE_POOLER_HOST: ${{ secrets.SUPABASE_POOLER_HOST }}
          SUPABASE_POOLER_PORT: ${{ secrets.SUPABASE_POOLER_PORT }}
          SUPABASE_DB_USER: ${{ secrets.SUPABASE_DB_USER }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
          # Optional override:
          # SUPABASE_DB_NAME: postgres
        run: ./backup_supabase.sh

      # 7. Upload the dump files as artifacts (retain for 90 days)
      - name: Upload backups
        uses: actions/upload-artifact@v4
        with:
          name: supabase-backups-${{ github.run_id }}
          path: backups/**/*.dump
          retention-days: 90
